#include	"xmlog.h"
#include	"xm_type.h"
#include    "protocol.h"
uchar testbuf[50]={0xf4,0xf5,0x00,0x40,0x29,0x00,0x00,0x01,\
				   0x01,0xfe,0x01,0x00,0x00,0x65,0x00,0x00,\
				   0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,\
				   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
				   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
				   0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xd2,\
				   0xf4,0xfb};
uchar status[2048];
int main(int argc,char *args[]){
#ifdef XM_MEM_DEBUG
	mtrace();
#endif
	int len;
	char at[4096];
	char *ret,*retparse;
	if(argc>1){
		memset(at,'\0',4096);
		snprintf(at,4096,"AT+KTGN=TEST,%s",args[1]);
		len=strlen(at);
		ret=xm_build_para(at,&len);
		if(len){
			printf_buf("gnbuild",(unsigned char *)ret,len);
			retparse=xm_parse_para("AT+KTGN=TEST,?",strlen("AT+KTGN=TEST,?"),ret,len);
			printf_buf("gnparse",(unsigned char *)retparse,strlen(retparse));
			free(retparse);
			free(ret);
		}else{
			
			XM_E("ERROR:gn NULL\r\n");
		}		
	}else{
		XM_E("ERROR:arg NULL\r\n");
	}
	len=50;
	printf_buf("testbuf",(unsigned char *)testbuf,len);
	ret=xm_ret_cmd((char *)status,(char *)testbuf,&len);
	if(len && ret){
		printf_buf("test",(unsigned char *)ret,len);
	}
}

